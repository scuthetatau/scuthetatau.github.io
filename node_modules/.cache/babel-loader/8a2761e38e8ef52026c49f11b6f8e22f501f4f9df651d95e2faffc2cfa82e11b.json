{"ast":null,"code":"var _jsxFileName = \"/Users/tavenharris/Documents/GitHub/scu_tt_website/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// #file: components/ProtectedRoute/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAdminUser = async () => {\n  try {\n    const response = await axios.get('/api/check-role');\n    return response.data.isAdmin;\n  } catch (error) {\n    console.error('Error checking admin role:', error);\n    return false;\n  }\n};\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthorized, setIsAuthorized] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(true);\n  React.useEffect(() => {\n    const checkAdmin = async () => {\n      const isAdmin = await isAdminUser();\n      setIsAuthorized(isAdmin);\n      setIsLoading(false);\n    };\n    checkAdmin();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return isAuthorized ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 38\n  }, this);\n};\n_s(ProtectedRoute, \"qcwnlPScfOohzz3z+v/if3RbYag=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","axios","jsxDEV","_jsxDEV","isAdminUser","response","get","data","isAdmin","error","console","ProtectedRoute","children","_s","isAuthorized","setIsAuthorized","useState","isLoading","setIsLoading","useEffect","checkAdmin","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/tavenharris/Documents/GitHub/scu_tt_website/src/components/ProtectedRoute.js"],"sourcesContent":["// #file: components/ProtectedRoute/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst isAdminUser = async () => {\n    try {\n        const response = await axios.get('/api/check-role');\n        return response.data.isAdmin;\n    } catch (error) {\n        console.error('Error checking admin role:', error);\n        return false;\n    }\n};\n\nconst ProtectedRoute = ({ children }) => {\n    const [isAuthorized, setIsAuthorized] = React.useState(false);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        const checkAdmin = async () => {\n            const isAdmin = await isAdminUser();\n            setIsAuthorized(isAdmin);\n            setIsLoading(false);\n        };\n\n        checkAdmin();\n    }, []);\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    return isAuthorized ? children : <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,iBAAiB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI,CAACC,OAAO;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;EAEtDjB,KAAK,CAACoB,SAAS,CAAC,MAAM;IAClB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMZ,OAAO,GAAG,MAAMJ,WAAW,CAAC,CAAC;MACnCW,eAAe,CAACP,OAAO,CAAC;MACxBU,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDE,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,SAAS,EAAE;IACX,oBAAOd,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,OAAOV,YAAY,GAAGF,QAAQ,gBAAGT,OAAA,CAACH,QAAQ;IAACyB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D,CAAC;AAACX,EAAA,CAnBIF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}